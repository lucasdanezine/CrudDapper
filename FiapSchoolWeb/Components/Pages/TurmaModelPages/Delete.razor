@page "/turmamodels/delete"
@inject FiapSchoolWeb.Data.FiapSchoolWebContext DB
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>TurmaModel</h4>
    <hr />
    @if (turmamodel is null)
    {
        <p><em>Carregando...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Curso_Id</dt>
            <dd class="col-sm-10">@turmamodel.Curso_Id</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Turma</dt>
            <dd class="col-sm-10">@turmamodel.Turma</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Ano</dt>
            <dd class="col-sm-10">@turmamodel.Ano</dd>
        </dl>
        <EditForm method="post" Model="turmamodel" OnValidSubmit="DeleteTurmaModel" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(turmamodel is null)">Delete</button> |
            <a href="/turmamodels">Voltar para a Lista</a>
        </EditForm>
    }
</div>

@code {
    TurmaModel? turmamodel;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        turmamodel = await DB.Turmas.FirstOrDefaultAsync(m => m.Id == Id);

        if (turmamodel is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteTurmaModel()
    {
        DB.Turmas.Remove(turmamodel!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/turmamodels");
    }
}
